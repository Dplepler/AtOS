diff -uwr cdrtools-2.01.orig/include/schily.h cdrtools-2.01/include/schily.h
--- cdrtools-2.01.orig/include/schily.h	2004-03-04 16:30:40.000000000 -0800
+++ cdrtools-2.01/include/schily.h	2006-03-10 08:45:14.046875000 -0800
@@ -187,7 +187,7 @@
 extern	char	*findbytes __PR((const void *, int, char));
 extern	int	findline __PR((const char *, char, const char *,
 							int, char **, int));
-extern	int	getline __PR((char *, int));
+extern	int	shilly_getline __PR((char *, int));
 extern	int	getstr __PR((char *, int));
 extern	int	breakline __PR((char *, char, char **, int));
 extern	int	getallargs __PR((int *, char * const**, const char *, ...));
diff -uwr cdrtools-2.01.orig/libscg/scsitransp.c cdrtools-2.01/libscg/scsitransp.c
--- cdrtools-2.01.orig/libscg/scsitransp.c	2004-06-17 13:20:27.000000000 -0700
+++ cdrtools-2.01/libscg/scsitransp.c	2006-03-09 23:49:15.671875000 -0800
@@ -323,7 +323,7 @@
 
 	js_printf("%s", msg);
 	flush();
-	if (getline(okbuf, sizeof (okbuf)) == EOF)
+	if (shilly_getline(okbuf, sizeof (okbuf)) == EOF)
 		exit(EX_BAD);
 	if (streql(okbuf, "y") || streql(okbuf, "yes") ||
 	    streql(okbuf, "Y") || streql(okbuf, "YES"))
diff -uwr cdrtools-2.01.orig/libschily/stdio/fgetline.c cdrtools-2.01/libschily/stdio/fgetline.c
--- cdrtools-2.01.orig/libschily/stdio/fgetline.c	2004-08-08 04:02:05.000000000 -0700
+++ cdrtools-2.01/libschily/stdio/fgetline.c	2006-03-09 23:48:45.687500000 -0800
@@ -64,7 +64,7 @@
 }
 
 EXPORT int
-getline(buf, len)
+shilly_getline(buf, len)
 	char	*buf;
 	int	len;
 {
diff -uwr cdrtools-2.01.orig/readcd/io.c cdrtools-2.01/readcd/io.c
--- cdrtools-2.01.orig/readcd/io.c	2002-12-25 06:13:28.000000000 -0800
+++ cdrtools-2.01/readcd/io.c	2006-03-09 23:48:55.859375000 -0800
@@ -138,7 +138,7 @@
 		(*prt)(s, *lp, mini, maxi, dp);
 		flush();
 		line[0] = '\0';
-		if (getline(line, 80) == EOF)
+		if (shilly_getline(line, 80) == EOF)
 			exit(EX_BAD);
 
 		linep = skipwhite(line);
@@ -205,7 +205,7 @@
 	printf("%r", form, args);
 	va_end(args);
 	flush();
-	if (getline(okbuf, sizeof(okbuf)) == EOF)
+	if (shilly_getline(okbuf, sizeof(okbuf)) == EOF)
 		exit(EX_BAD);
 	if (okbuf[0] == '?') {
 		printf("Enter 'y', 'Y', 'yes' or 'YES' if you agree with the previous asked question.\n");
diff -uwr cdrtools-2.01.orig/readcd/readcd.c cdrtools-2.01/readcd/readcd.c
--- cdrtools-2.01.orig/readcd/readcd.c	2004-09-08 10:24:14.000000000 -0700
+++ cdrtools-2.01/readcd/readcd.c	2006-03-09 23:49:00.312500000 -0800
@@ -1651,7 +1651,7 @@
 		error("Copy from SCSI (%d,%d,%d) disk to file\n",
 					scg_scsibus(scgp), scg_target(scgp), scg_lun(scgp));
 		error("Enter filename [%s]: ", defname); flush();
-		(void) getline(filename, sizeof (filename));
+		(void) shilly_getline(filename, sizeof (filename));
 	}
 
 	if (askrange) {
@@ -1820,7 +1820,7 @@
 		error("Copy from file to SCSI (%d,%d,%d) disk\n",
 					scg_scsibus(scgp), scg_target(scgp), scg_lun(scgp));
 		error("Enter filename [%s]: ", defname); flush();
-		(void) getline(filename, sizeof (filename));
+		(void) shilly_getline(filename, sizeof (filename));
 		error("Notice: reading from file always starts at file offset 0.\n");
 
 		getlong("Enter starting sector for copy:", &addr, 0L, end-1);
diff -uwr cdrtools-2.01.orig/scgcheck/dmaresid.c cdrtools-2.01/scgcheck/dmaresid.c
--- cdrtools-2.01.orig/scgcheck/dmaresid.c	2004-09-08 10:45:22.000000000 -0700
+++ cdrtools-2.01/scgcheck/dmaresid.c	2006-03-09 23:48:38.984375000 -0800
@@ -64,7 +64,7 @@
 	printf("Ready to start test for working DMA residual count? Enter <CR> to continue: ");
 	fprintf(logfile, "**********> Testing for working DMA residual count.\n");
 	flushit();
-	(void) getline(abuf, sizeof (abuf));
+	(void) shilly_getline(abuf, sizeof (abuf));
 
 	printf("**********> Testing for working DMA residual count == 0.\n");
 	fprintf(logfile, "**********> Testing for working DMA residual count == 0.\n");
@@ -95,7 +95,7 @@
 	printf("Ready to start test for working DMA residual count == DMA count? Enter <CR> to continue: ");
 	fprintf(logfile, "**********> Testing for working DMA residual count == DMA count.\n");
 	flushit();
-	(void) getline(abuf, sizeof (abuf));
+	(void) shilly_getline(abuf, sizeof (abuf));
 	passed = TRUE;
 	dmacnt = cnt;
 	ret = xtinquiry(scgp, 0, dmacnt);
@@ -130,7 +130,7 @@
 	printf("Ready to start test for working DMA residual count == 1? Enter <CR> to continue: ");
 	fprintf(logfile, "**********> Testing for working DMA residual count == 1.\n");
 	flushit();
-	(void) getline(abuf, sizeof (abuf));
+	(void) shilly_getline(abuf, sizeof (abuf));
 	passed = TRUE;
 	dmacnt = cnt+1;
 	ret = xtinquiry(scgp, cnt, dmacnt);
diff -uwr cdrtools-2.01.orig/scgcheck/scgcheck.c cdrtools-2.01/scgcheck/scgcheck.c
--- cdrtools-2.01.orig/scgcheck/scgcheck.c	2004-09-08 10:49:48.000000000 -0700
+++ cdrtools-2.01/scgcheck/scgcheck.c	2006-03-09 23:49:05.281250000 -0800
@@ -189,7 +189,7 @@
 			break;
 		error("Enter SCSI device name for bus scanning [%s]: ", device);
 		flushit();
-		(void) getline(device, sizeof (device));
+		(void) shilly_getline(device, sizeof (device));
 		if (device[0] == '\0')
 			strcpy(device, "0,6,0");
 
@@ -227,7 +227,7 @@
 	do {
 		error("Enter SCSI device name [%s]: ", device);
 		flushit();
-		(void) getline(device, sizeof (device));
+		(void) shilly_getline(device, sizeof (device));
 		if (device[0] == '\0')
 			strcpy(device, "0,6,0");
 
@@ -256,7 +256,7 @@
 
 	printf("Ready to start test for second SCSI open? Enter <CR> to continue: ");
 	flushit();
-	(void) getline(abuf, sizeof (abuf));
+	(void) shilly_getline(abuf, sizeof (abuf));
 #define	CHECK_SECOND_OPEN
 #ifdef	CHECK_SECOND_OPEN
 	if (!streql(abuf, "n")) {
@@ -344,7 +344,7 @@
 
 	printf("Ready to start test for succeeded command? Enter <CR> to continue: ");
 	flushit();
-	(void) getline(abuf, sizeof (abuf));
+	(void) shilly_getline(abuf, sizeof (abuf));
 	scgp->verbose++;
 	ret = inquiry(scgp, buf, sizeof (struct scsi_inquiry));
 	scg_vsetup(scgp);
diff -uwr cdrtools-2.01.orig/scgcheck/sense.c cdrtools-2.01/scgcheck/sense.c
--- cdrtools-2.01.orig/scgcheck/sense.c	2003-03-27 02:59:52.000000000 -0800
+++ cdrtools-2.01/scgcheck/sense.c	2006-03-09 23:49:34.609375000 -0800
@@ -66,7 +66,7 @@
 	printf("Ready to start test for failing command? Enter <CR> to continue: ");
 	fprintf(logfile, "**********> Testing for failed SCSI command.\n");
 	flushit();
-	(void)getline(abuf, sizeof(abuf));
+	(void)shilly_getline(abuf, sizeof(abuf));
 /*	scgp->verbose++;*/
 	fillbytes(buf, sizeof(struct scsi_inquiry), '\0');
 	fillbytes((caddr_t)scgp->scmd, sizeof(*scgp->scmd), '\0');
@@ -82,13 +82,13 @@
 		printf("the test utility. Otherwise remove any medium from the drive.\n");
 		printf("Ready to start test for failing command? Enter <CR> to continue: ");
 		flushit();
-		(void)getline(abuf, sizeof(abuf));
+		(void)shilly_getline(abuf, sizeof(abuf));
 		ret = test_unit_ready(scgp);
 		if (ret >= 0 || !scg_cmd_err(scgp)) {
 			printf("Test Unit Ready did not fail.\n");
 			printf("Ready to eject tray? Enter <CR> to continue: ");
 			flushit();
-			(void)getline(abuf, sizeof(abuf));
+			(void)shilly_getline(abuf, sizeof(abuf));
 			scsi_unload(scgp, (cdr_t *)0);
 			ret = test_unit_ready(scgp);
 		}
@@ -127,7 +127,7 @@
 	printf("Ready to start test for sense data count? Enter <CR> to continue: ");
 	fprintf(logfile, "**********> Testing for SCSI sense data count.\n");
 	flushit();
-	(void)getline(abuf, sizeof(abuf));
+	(void)shilly_getline(abuf, sizeof(abuf));
 	printf("Testing if at least CCS_SENSE_LEN (%d) is supported...\n", CCS_SENSE_LEN);
 	fprintf(logfile, "**********> Testing if at least CCS_SENSE_LEN (%d) is supported...\n", CCS_SENSE_LEN);
 	ret = sensecount(scgp, CCS_SENSE_LEN);
--- cdrtools-2.01.orig/cdrecord/cue.c	2004-03-02 12:00:53.000000000 -0800
+++ cdrtools-2.01/cdrecord/cue.c	2006-04-30 09:16:52.056841000 -0700
@@ -249,7 +249,7 @@
 LOCAL	char	*peekword	__PR((void));
 LOCAL	char	*lineend	__PR((void));
 LOCAL	char	*markword	__PR((char *delim));
-LOCAL	char	getdelim	__PR((void));
+LOCAL	char	getdelim_	__PR((void));
 LOCAL	char	*getnextitem	__PR((char *delim));
 LOCAL	char	*neednextitem	__PR((char *delim));
 LOCAL	char	*nextword	__PR((void));
@@ -772,7 +772,7 @@
 	if (kp == NULL)
 		cueabort("Unknown filetype '%s'", word);
 
-	if (getdelim() == '/') {
+	if (getdelim_() == '/') {
 		word = needitem();
 		if (*astol(++word, &secsize) != '\0')
 			cueabort("Not a number '%s'", word);
@@ -1163,7 +1163,7 @@
 }
 
 LOCAL char
-getdelim()
+getdelim_()
 {
 	return (wordendc);
 }
